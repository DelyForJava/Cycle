require 'Global'

local canvas
local hall
local login
local loading
local bar
local barText

local hallScene
local loginScene

local currentScene

local index = 0
local percent = 0
local max = 1

function Awake()

	print("-------------------------------- Awake:"..BAssetBundleManager.Instance.Version.." --------------------------------")
	print("--CSharp Data:"..BUrl.."--")
	print("--CSharp Data:"..BChannelId.."--")
	print("--CSharp Data:"..BCdn.."--")

	canvas = UGameObject.Find("Canvas").transform
	hall = canvas:Find("Hall")
	hallScene = require("Hall/Hall")
	hallScene.Init(hall)
	currentScene = hallScene
	percent = hallScene.index
	max = hallScene.max

	login = canvas:Find("Login")
	loginScene = require("Login/Login")
	loginScene.Init(login)
	percent = percent + loginScene.index
	max = max + loginScene.max

	loading = canvas:Find("Loading")
	bar = loading:Find("Bar"):GetComponent(typeof(UImage))
	barText = loading:Find("Text"):GetComponent(typeof(UText))
end

function Start()
		--print("-------------------------------- Start --------------------------------")
end

function Update()

	hallScene.Update()
	loginScene.Update()
	-- print("current index:"..currentScene.index..",max:"..currentScene.max)
	--currentScene.Update()
	percent = loginScene.index + hallScene.index
	local p = percent/max
	bar.fillAmount = p
	barText.text = tostring(math.ceil(p*100))
	--loginScene.Update()
	--hallScene.Update()
	if true==hallScene.reloaded then
		if false==loginScene.reloaded then
			currentScene = loginScene
		else
			loading.gameObject:SetActive(false)
		end
	end
end

function OnDestroy()
		-- print("-------------------------------- OnDestroy --------------------------------")

end