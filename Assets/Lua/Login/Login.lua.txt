local Login = {}
local self = Login
self.name = "Login"
self.transform = nil
self.resReload = nil

local index = 0
local max = 0
self.reloaded = false

local co = coroutine.create(function(index)
	-- for i=0,images.Length-1 do
		self.resReload:SendMessage("OnStepImage",index)
		return coroutine.yield()
	-- end
end)

function Login.Init(transform)
		self.transform = transform
		self.resReload = StartReload(transform.gameObject)
		local images = self.resReload.images
		max = images.Length-1

		local bt = transform:Find("yk_bg"):GetComponent("Button")
		bt.onClick:AddListener(function()
				-- print("on tourist clicked")
				print( ConfigData.GetVipUpgradeExpByLevel(7) )
				transform.gameObject:SetActive(false)

		end)

end


function Login.Update()
	if index>max then
		self.reloaded = true
		return
	end
	print("-------------------------------- Login Update --------------------------------")

	print("I am in the coroutine:"..index)
	coroutine.resume(co,index)
	index = index + 1

end

return Login

--[[ local Model = require 'Login/LoginModel'
local View = require 'Login/LoginView'

local Login = {}
local self = Login
self.name = "Login"

function Login.Awake()
		USceneManager.LoadSceneAsync( "Scenes/"..self.name)
end

function Login.Start()
		print("-------------------------------- Login Start --------------------------------")
end

function Login.Update()
		-- print("-------------------------------- Login Update --------------------------------")
		if false==View.loaded then
				View.Update()
		end
end

function Login.OnDestroy()
		print("-------------------------------- Login OnDestroy --------------------------------")
end

function Login.GetLoaded()
		return View.loaded
end

return Login
]]