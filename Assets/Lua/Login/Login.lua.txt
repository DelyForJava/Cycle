print("where am i6666666")
Vars.Myt1 = 3
print("where am i7777777"..Vars.Myt1)
Myt2 = 3.2

local yield_return = (require 'Coroutine').yield_return


local Event = require("Event")

local OnClickTouristLuaCallCS = OnClickTouristLuaCallCS

local Login = {}
local self = Login

self.name = "Login"
self.transform = nil
self.resReload = nil

self.index = 0
self.max = 0
self.reloaded = false

local LoginCallback = function (...)
	print("---------------------------LoginCallback")
	local args = {...}
	for k,v in pairs(args) do
		print(k,v)
	end
end

function Login.Close()
	self.transform.gameObject:SetActive(false)
end

function Login.Init(transform)
	self.transform = transform
	local bt = transform:Find("yk_bg"):GetComponent( typeof(UButton) )
	bt.onClick:AddListener(function()
		print("on tourist clicked")
		print( ConfigData.GetVipUpgradeExpByLevel(7) )
		--transform.gameObject:SetActive(false)
		OnClickTouristLuaCallCS()
		Event:Brocast("MSG_PLAY","arg1","arg2")

	end)

	local bt = transform:Find("wx_bg"):GetComponent( typeof(UButton) )
	bt.onClick:AddListener(function()
		print("on wechat clicked")
		--transform.gameObject:SetActive(false)
		OnClickWechatLuaCallCS()
	end)

	-- self.resReload = StartReload(self)
	local cavas = UGameObject.Find("Canvas")
	self.resReload = cavas.transform.Find(self.transform.gameObject.name).gameObject:AddComponent( typeof(BResReload) )
	local images = self.resReload.images
	self.max = images.Length-1

	Event:AddListener("MSG_PLAY",LoginCallback)
	local step = coroutine.create(function()
	  		print('coroutine start!')
	  		while true do
	  			if self.index > self.max then
	  				break
	  			end
	  			local t1 = os.time()
	  			print("t1============:"..t1)
				self.resReload:SendMessage("OnStepImage",tostring(self.index) )
	  			local t2 = os.time()
	  			print("t2============:"..t2)
				self.index = self.index + 1
				yield_return("null")

	  		end


	end)
	-- assert(coroutine.resume(step))
end


function Login.Update()
	if self.index>self.max then
		self.reloaded = true
		return
	end
	-- print("-------------------------------- Login Update --------------------------------")

	self.resReload:SendMessage("OnStepImage",tostring(self.index) )
	self.index = self.index + 1

end

return Login